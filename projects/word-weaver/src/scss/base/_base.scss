@viewport {
  width: device-width;
}

html {
  background-color: $color-background;
  box-sizing: border-box;
  height: 100%;
}

* {
  &:before,
  &:after {
    box-sizing: inherit;
  }
}

body {
  -webkit-font-smoothing: antialiased;
  color: $color-text;
  font-family: $font-family-default;
  min-height: 100%;
  overflow-x: hidden;
  overflow-y: hidden;
  text-rendering: optimizeLegibility;
}

a {
  background: transparent;
  color: $color-link;
  text-decoration: none;
  transition: color 0.2s;
  outline: none;
  &:active,
  &:focus {
    outline: none;
  }
}

img {
  height: auto;
  max-width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  // font-family: $font-family-display;
  font-family: $font-family-accent;
  font-weight: normal;
  @include colors($ui-colors);
  @include colors($verb-highlight-colors);
}

p,
mat-chip,
mat-tab-label,
span,
button,
a {
  font-family: $font-family-display;
}

.bg-img {
  /* The image used */
  background-image: url("https://roedoejet.github.io/wordweaver/dist_toy/assets/img/bg.jpg");
  /* Full height */
  height: 100vh;
  overflow: overlay;
  overflow-x: hidden;
  /* Center and scale the image nicely */
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 100%;
}

.shadow-box {
  box-shadow: 0 0.3125rem 1rem 0 rgba(0, 0, 0, 0.24);
  padding: 25px;
  background: rgba(255, 255, 255, 0.94);
  border-radius: 5px;
}

// Colors

@for $i from 1 through length($other-highlights) {
  .highlight-#{$i} {
    color: map-get($other-highlights, $i);
  }
}

span,
p,
mat-chip,
mat-button-toggle,
button,
mat-icon {
  @include colors($ui-colors);
  @include colors($verb-highlight-color-names);
}

div,
nav,
button,
mat-chip,
mat-toolbar,
mat-grid-tile {
  @include bg-colors($ui-colors);
}

div,
mat-chip,
mat-button-toggle,
button {
  @include bg-colors($verb-highlight-color-names);
}

@each $name, $value in $font-sizes {
  .font-#{$name} {
    font-size: em($value);
  }
}

.faded {
  opacity: 0.2;
  color: black;
}

table {
  table-layout: fixed;
}

.container {
  max-width: em(map-get($breakpoints, xlarge));
}
